[{"/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/App.js":"1","/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/index.js":"2","/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/Config.js":"3","/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/Components/Home/Home.js":"4","/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/MovieGrid.js":"5","/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/Components/MovieCard/MovieCard.js":"6","/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/Components/WatchList/WatchList.js":"7","/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/ListForm.js":"8"},{"size":1943,"mtime":1610046255188,"results":"9","hashOfConfig":"10"},{"size":471,"mtime":1609803626908,"results":"11","hashOfConfig":"10"},{"size":810,"mtime":1609882663770,"results":"12","hashOfConfig":"10"},{"size":1700,"mtime":1610048338743,"results":"13","hashOfConfig":"10"},{"size":618,"mtime":1609962050559,"results":"14","hashOfConfig":"10"},{"size":1190,"mtime":1610054185655,"results":"15","hashOfConfig":"10"},{"size":1584,"mtime":1610046333252,"results":"16","hashOfConfig":"10"},{"size":1023,"mtime":1610009215589,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"vivb3w",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/App.js",["36","37"],"import {Route, Link, Switch} from 'react-router-dom';\nimport {useState, useEffect, useRef} from 'react';\nimport './App.css';\nimport Home from './Components/Home/Home.js' \nimport WatchList from './Components/WatchList/WatchList.js'\nimport MovieCard from './Components/MovieCard/MovieCard.js'\n\n\nfunction App() {\n  const [list, setList] = useState([])\n\n    const fetchList = async () => {\n      try{\n          const response = await fetch('https://localhost:3000/WatchList');\n          const data = await response.json();\n          setList(data)\n      } catch (error) {\n          console.error(error)\n      }\n  }\n\n  const deleteList = async (id) => {\n    try {\n      const response = await fetch(`https://localhost:3000/WatchList`, {\n        method: 'DELETE',\n      })\n      const data = await response.json();\n      const filteredList = list.filter(list=> list._id !== data._id)\n      setList(filteredList);\n    } catch(error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    fetchList()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <nav class='nav-bar'>\n        <div class='logo-container'>\n        <a href=\"/\">\n          <img id=\"logo\" src='https://res.cloudinary.com/gregdusek/image/upload/v1609875563/GOATflix/GOATflix_nzf8rs.png' alt=\"\"/></a>\n        </div> \n        <div className='search-container'>\n          <img id='search-icon' src=\"https://res.cloudinary.com/gregdusek/image/upload/v1609890114/GOATflix/search_icon_mpdoc3.png\" alt=\"\"/>\n        </div>\n        <div className='nav-routes'>\n          <Link to='/'>Home</Link>\n          <Link to='/WatchList'>Watch List</Link>\n        </div>\n      </nav>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/WatchList' component={WatchList} />\n        <Route path='/MovieCard/:id' render={routerProps => {\n          return <MovieCard routerProps={routerProps} />\n        }} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App;","/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/index.js",[],"/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/Config.js",[],"/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/Components/Home/Home.js",["38"],"/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/MovieGrid.js",[],"/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/Components/MovieCard/MovieCard.js",["39","40","41"],"/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/Components/WatchList/WatchList.js",["42"],"/Users/gdusek/SEIR/Project-3/GOATflix/frontend/src/ListForm.js",["43","44","45"],"import { useRef, useState, useEffect } from 'react';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (props) => {\n    const [formData, setFormData] = useState({});\n    const titleInput = useRef(null);\n\n    const createList = async (event) => {\n        event.preventDefault()\n        const title = titleInput.current.value;\n        const body = JSON.stringify({title});\n        event.currentTarget.reset();\n        try {\n            const response = await fetch('https://localhost:3000/WatchList', {\n                method: 'POST',\n                headers: {'Content-type': 'application/json'},\n                body: body\n            })\n            const data = await response.json();\n            props.updatedList([...props.list, data])\n        } catch (error) {\n            console.error(error)\n        }\n\n    }\n\n    return (\n        <form onSubmit={createList}>\n            <input type=\"text\" ref={titleInput} />\n            <input type=\"submit\" value=\"Add Movie\"/>\n        </form>\n    )\n}\n",{"ruleId":"46","severity":1,"message":"47","line":2,"column":30,"nodeType":"48","messageId":"49","endLine":2,"endColumn":36},{"ruleId":"46","severity":1,"message":"50","line":22,"column":9,"nodeType":"48","messageId":"49","endLine":22,"endColumn":19},{"ruleId":"46","severity":1,"message":"51","line":4,"column":27,"nodeType":"48","messageId":"49","endLine":4,"endColumn":37},{"ruleId":"46","severity":1,"message":"52","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":13},{"ruleId":"46","severity":1,"message":"51","line":4,"column":27,"nodeType":"48","messageId":"49","endLine":4,"endColumn":37},{"ruleId":"53","severity":1,"message":"54","line":23,"column":8,"nodeType":"55","endLine":23,"endColumn":10,"suggestions":"56"},{"ruleId":"46","severity":1,"message":"57","line":7,"column":11,"nodeType":"48","messageId":"49","endLine":7,"endColumn":20},{"ruleId":"46","severity":1,"message":"58","line":1,"column":28,"nodeType":"48","messageId":"49","endLine":1,"endColumn":37},{"ruleId":"46","severity":1,"message":"59","line":5,"column":12,"nodeType":"48","messageId":"49","endLine":5,"endColumn":20},{"ruleId":"46","severity":1,"message":"60","line":5,"column":22,"nodeType":"48","messageId":"49","endLine":5,"endColumn":33},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'deleteList' is assigned a value but never used.","'API_SEARCH' is defined but never used.","'Movie' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSelectedMovie'. Either include it or remove the dependency array.","ArrayExpression",["61"],"'fetchList' is assigned a value but never used.","'useEffect' is defined but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.",{"desc":"62","fix":"63"},"Update the dependencies array to be: [setSelectedMovie]",{"range":"64","text":"65"},[682,684],"[setSelectedMovie]"]